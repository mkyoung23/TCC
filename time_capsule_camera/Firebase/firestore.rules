rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users collection - users can only read/write their own data
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      
      // User notifications subcollection
      match /notifications/{notificationId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
    }
    
    // Capsules collection
    match /capsules/{capsuleId} {
      // Users can read/write capsules they are members of
      allow read, write: if request.auth != null && 
        request.auth.uid in resource.data.memberIds;
      
      // Allow creation if user is the creator and included in memberIds
      allow create: if request.auth != null &&
        request.auth.uid == request.resource.data.creatorId &&
        request.auth.uid in request.resource.data.memberIds;
      
      // Videos subcollection
      match /videos/{videoId} {
        // Members can read all videos in their capsules
        allow read: if request.auth != null && 
          request.auth.uid in get(/databases/$(database)/documents/capsules/$(capsuleId)).data.memberIds;
        
        // Members can create videos with their own uploader ID
        allow create: if request.auth != null &&
          request.auth.uid in get(/databases/$(database)/documents/capsules/$(capsuleId)).data.memberIds &&
          request.auth.uid == request.resource.data.uploaderId &&
          request.resource.data.keys().hasAll(['videoId', 'uploaderId', 'uploaderName', 'storagePath', 'createdAt', 'uploadedAt']);
        
        // No updates or deletes allowed for videos (immutable memories)
        allow update, delete: if false;
      }
    }
    
    // Deny all other requests
    match /{document=**} {
      allow read, write: if false;
    }
  }
}